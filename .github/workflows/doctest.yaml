name: Doctests
on: push

jobs:
  doctest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout the Code from GIT Repository
      uses: actions/checkout@v2

    - name: Setup Python Version
      uses: actions/setup-python@v2
      with:
        python-version: '3.9.5'

    - name: Setup PIP Cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Doctest About
      run: |
        cd about
        pip install -r requirements.txt
        sphinx-build -a -E -j auto --color -b doctest . /tmp/
        find . -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    # - name: Doctest Advanced
    #   run: |
    #       cd advanced
    #       pip install -r requirements.txt
    #       sphinx-build -a -E -j auto --color -b doctest . /tmp/
    #       find . -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    - name: Doctest Basics
      run: |
        cd basics
        pip install -r requirements.txt
        sphinx-build -a -E -j auto --color -b doctest . /tmp/
        find . -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    - name: Doctest Data Science
      run: |
        sphinx-build -a -E -j auto --color -b doctest data-science /tmp/
        find data-science -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    # - name: Doctest Design Patterns
    #   run: |
    #     sphinx-build -a -E -j auto --color -b doctest design-patterns /tmp/
    #     find design-patterns -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    - name: Doctest DevOps
      run: |
        sphinx-build -a -E -j auto --color -b doctest devops /tmp/
        find devops -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    # - name: Doctest Django
    #   run: |
    #     sphinx-build -a -E -j auto --color -b doctest django /tmp/
    #     find django -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    # - name: Doctest Dragon
    #   run: |
    #     sphinx-build -a -E -j auto --color -b doctest dragon /tmp/
    #     find dragon -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    - name: Doctest FastAPI
      run: |
        sphinx-build -a -E -j auto --color -b doctest fastapi /tmp/
        find fastapi -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    # - name: Doctest Machine Learning
    #   run: |
    #     sphinx-build -a -E -j auto --color -b doctest machine-learning /tmp/
    #     find machine-learning -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    # - name: Doctest Matplotlib
    #   run: |
    #     sphinx-build -a -E -j auto --color -b doctest matplotlib /tmp/
    #     find matplotlib -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    # - name: Doctest Network
    #   run: |
    #     sphinx-build -a -E -j auto --color -b doctest network /tmp/
    #     find network -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    - name: Doctest NumPy
      run: |
        sphinx-build -a -E -j auto --color -b doctest numpy /tmp/
        find numpy -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    - name: Doctest OOP
      run: |
        sphinx-build -a -E -j auto --color -b doctest oop /tmp/
        find oop -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    - name: Doctest Pandas
      run: |
        sphinx-build -a -E -j auto --color -b doctest pandas /tmp/
        find pandas -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;

    - name: Doctest Stdlib
      run: |
        sphinx-build -a -E -j auto --color -b doctest stdlib /tmp/
        find stdlib -path '*assignments*' -name '*.py' -exec python -m doctest '{}' \;
